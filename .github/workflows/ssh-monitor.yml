name: SSH Port Monitor

on:
  schedule:
    # 每5分钟检查一次
    - cron: '*/5 * * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  monitor-ssh:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Monitor SSH Port 22
      run: |
        HOST="artnests.com"
        PORT="22"
        WEBHOOK_URL="https://open.feishu.cn/open-apis/bot/v2/hook/da5b31b2-5178-4fc0-b8fe-5c69cf5e1a5d"
        FAILED_COUNT=0
        
        echo "开始监控 $HOST:$PORT"
        
        # 进行3次测试
        for i in {1..3}; do
          echo "第 $i 次测试..."
          
          # 使用nc (netcat) 测试端口连接，超时时间为10秒
          if timeout 10 nc -z "$HOST" "$PORT" 2>/dev/null; then
            echo "✅ 第 $i 次测试成功: $HOST:$PORT 可访问"
            # 如果有一次成功，就退出不发送告警
            exit 0
          else
            echo "❌ 第 $i 次测试失败: $HOST:$PORT 不可访问"
            FAILED_COUNT=$((FAILED_COUNT + 1))
            
            # 如果不是最后一次测试，等待间隔时间
            if [ $i -eq 1 ]; then
              echo "等待5秒后进行下一次测试..."
              sleep 5
            elif [ $i -eq 2 ]; then
              echo "等待30秒后进行最后一次测试..."
              sleep 30
            fi
          fi
        done
        
        # 如果3次都失败了，发送告警
        if [ $FAILED_COUNT -eq 3 ]; then
          echo "🚨 连续3次测试失败，发送告警通知"
          
          CURRENT_TIME=$(date '+%Y-%m-%d %H:%M:%S UTC')
          
          # 构造飞书消息
          MESSAGE="{
            \"msg_type\": \"text\",
            \"content\": {
              \"text\": \"🚨 SSH端口监控告警\\n\\n服务器: $HOST\\n端口: $PORT\\n状态: 连接失败\\n失败次数: 3/3\\n检测时间: $CURRENT_TIME\\n\\n请及时检查服务器状态！\"
            }
          }"
          
          # 发送告警到飞书
          HTTP_CODE=$(curl -w "%{http_code}" -s -o /dev/null \
            -X POST \
            -H "Content-Type: application/json" \
            -d "$MESSAGE" \
            "$WEBHOOK_URL")
            
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "✅ 告警消息发送成功"
          else
            echo "❌ 告警消息发送失败，HTTP状态码: $HTTP_CODE"
          fi
          
          # 设置失败退出码
          exit 1
        fi
